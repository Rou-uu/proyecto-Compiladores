<?xml version="1.0" encoding="UTF-8"?>
<testsuite xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report-3.0.xsd" version="3.0" name="com.compiler.RegexTest" time="0.071" tests="70" errors="0" skipped="0" failures="0">
  <properties>
    <property name="java.specification.version" value="24"/>
    <property name="sun.jnu.encoding" value="UTF-8"/>
    <property name="java.class.path" value="/Users/rou/Desktop/7moSemestre/Compiladores/proyecto-Compiladores/target/test-classes:/Users/rou/Desktop/7moSemestre/Compiladores/proyecto-Compiladores/target/classes:/Users/rou/.m2/repository/org/junit/jupiter/junit-jupiter/5.9.3/junit-jupiter-5.9.3.jar:/Users/rou/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.9.3/junit-jupiter-api-5.9.3.jar:/Users/rou/.m2/repository/org/opentest4j/opentest4j/1.2.0/opentest4j-1.2.0.jar:/Users/rou/.m2/repository/org/junit/platform/junit-platform-commons/1.9.3/junit-platform-commons-1.9.3.jar:/Users/rou/.m2/repository/org/apiguardian/apiguardian-api/1.1.2/apiguardian-api-1.1.2.jar:/Users/rou/.m2/repository/org/junit/jupiter/junit-jupiter-params/5.9.3/junit-jupiter-params-5.9.3.jar:/Users/rou/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.9.3/junit-jupiter-engine-5.9.3.jar:/Users/rou/.m2/repository/org/junit/platform/junit-platform-engine/1.9.3/junit-platform-engine-1.9.3.jar:"/>
    <property name="java.vm.vendor" value="Homebrew"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="java.vendor.url" value="https://github.com/Homebrew/homebrew-core/issues"/>
    <property name="os.name" value="Mac OS X"/>
    <property name="java.vm.specification.version" value="24"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="user.country" value="MX"/>
    <property name="sun.boot.library.path" value="/opt/homebrew/Cellar/openjdk/24.0.1/libexec/openjdk.jdk/Contents/Home/lib"/>
    <property name="sun.java.command" value="/Users/rou/Desktop/7moSemestre/Compiladores/proyecto-Compiladores/target/surefire/surefirebooter-20250914221618891_3.jar /Users/rou/Desktop/7moSemestre/Compiladores/proyecto-Compiladores/target/surefire 2025-09-14T22-16-18_856-jvmRun1 surefire-20250914221618891_1tmp surefire_0-20250914221618891_2tmp"/>
    <property name="http.nonProxyHosts" value="local|*.local|169.254/16|*.169.254/16"/>
    <property name="jdk.debug" value="release"/>
    <property name="surefire.test.class.path" value="/Users/rou/Desktop/7moSemestre/Compiladores/proyecto-Compiladores/target/test-classes:/Users/rou/Desktop/7moSemestre/Compiladores/proyecto-Compiladores/target/classes:/Users/rou/.m2/repository/org/junit/jupiter/junit-jupiter/5.9.3/junit-jupiter-5.9.3.jar:/Users/rou/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.9.3/junit-jupiter-api-5.9.3.jar:/Users/rou/.m2/repository/org/opentest4j/opentest4j/1.2.0/opentest4j-1.2.0.jar:/Users/rou/.m2/repository/org/junit/platform/junit-platform-commons/1.9.3/junit-platform-commons-1.9.3.jar:/Users/rou/.m2/repository/org/apiguardian/apiguardian-api/1.1.2/apiguardian-api-1.1.2.jar:/Users/rou/.m2/repository/org/junit/jupiter/junit-jupiter-params/5.9.3/junit-jupiter-params-5.9.3.jar:/Users/rou/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.9.3/junit-jupiter-engine-5.9.3.jar:/Users/rou/.m2/repository/org/junit/platform/junit-platform-engine/1.9.3/junit-platform-engine-1.9.3.jar:"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="user.home" value="/Users/rou"/>
    <property name="user.language" value="es"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="java.version.date" value="2025-04-15"/>
    <property name="java.home" value="/opt/homebrew/Cellar/openjdk/24.0.1/libexec/openjdk.jdk/Contents/Home"/>
    <property name="file.separator" value="/"/>
    <property name="basedir" value="/Users/rou/Desktop/7moSemestre/Compiladores/proyecto-Compiladores"/>
    <property name="java.vm.compressedOopsMode" value="Zero based"/>
    <property name="line.separator" value="&#10;"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="apple.awt.application.name" value="ForkedBooter"/>
    <property name="surefire.real.class.path" value="/Users/rou/Desktop/7moSemestre/Compiladores/proyecto-Compiladores/target/surefire/surefirebooter-20250914221618891_3.jar"/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="ftp.nonProxyHosts" value="local|*.local|169.254/16|*.169.254/16"/>
    <property name="java.runtime.version" value="24.0.1"/>
    <property name="user.name" value="rou"/>
    <property name="stdout.encoding" value="UTF-8"/>
    <property name="path.separator" value=":"/>
    <property name="os.version" value="15.6.1"/>
    <property name="java.runtime.name" value="OpenJDK Runtime Environment"/>
    <property name="file.encoding" value="UTF-8"/>
    <property name="java.vm.name" value="OpenJDK 64-Bit Server VM"/>
    <property name="java.vendor.version" value="Homebrew"/>
    <property name="localRepository" value="/Users/rou/.m2/repository"/>
    <property name="java.vendor.url.bug" value="https://github.com/Homebrew/homebrew-core/issues"/>
    <property name="java.io.tmpdir" value="/var/folders/m8/3v1lg6wd3g92fgsqwl_85ykh0000gn/T/"/>
    <property name="java.version" value="24.0.1"/>
    <property name="user.dir" value="/Users/rou/Desktop/7moSemestre/Compiladores/proyecto-Compiladores"/>
    <property name="os.arch" value="aarch64"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="native.encoding" value="UTF-8"/>
    <property name="java.library.path" value="/Users/rou/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:."/>
    <property name="java.vm.info" value="mixed mode, sharing"/>
    <property name="stderr.encoding" value="UTF-8"/>
    <property name="java.vendor" value="Homebrew"/>
    <property name="java.vm.version" value="24.0.1"/>
    <property name="sun.io.unicode.encoding" value="UnicodeBig"/>
    <property name="socksNonProxyHosts" value="local|*.local|169.254/16|*.169.254/16"/>
    <property name="java.class.version" value="68.0"/>
  </properties>
  <testcase name="testConcatWithGroupUnion(String, boolean)[1]" classname="com.compiler.RegexTest" time="0.009"/>
  <testcase name="testConcatWithGroupUnion(String, boolean)[2]" classname="com.compiler.RegexTest" time="0.0"/>
  <testcase name="testConcatWithGroupUnion(String, boolean)[3]" classname="com.compiler.RegexTest" time="0.0"/>
  <testcase name="testConcatWithGroupUnion(String, boolean)[4]" classname="com.compiler.RegexTest" time="0.0"/>
  <testcase name="testConcatWithGroupUnion(String, boolean)[5]" classname="com.compiler.RegexTest" time="0.001"/>
  <testcase name="testPlusOperator(String, boolean)[1]" classname="com.compiler.RegexTest" time="0.001"/>
  <testcase name="testPlusOperator(String, boolean)[2]" classname="com.compiler.RegexTest" time="0.0"/>
  <testcase name="testPlusOperator(String, boolean)[3]" classname="com.compiler.RegexTest" time="0.0"/>
  <testcase name="testPlusOperator(String, boolean)[4]" classname="com.compiler.RegexTest" time="0.001"/>
  <testcase name="testPlusOperator(String, boolean)[5]" classname="com.compiler.RegexTest" time="0.0"/>
  <testcase name="testPrecedenceConcatOverUnion(String, boolean)[1]" classname="com.compiler.RegexTest" time="0.001"/>
  <testcase name="testPrecedenceConcatOverUnion(String, boolean)[2]" classname="com.compiler.RegexTest" time="0.0"/>
  <testcase name="testPrecedenceConcatOverUnion(String, boolean)[3]" classname="com.compiler.RegexTest" time="0.0"/>
  <testcase name="testPrecedenceConcatOverUnion(String, boolean)[4]" classname="com.compiler.RegexTest" time="0.001"/>
  <testcase name="testPrecedenceConcatOverUnion(String, boolean)[5]" classname="com.compiler.RegexTest" time="0.0"/>
  <testcase name="testPrecedenceKleeneOverConcat(String, boolean)[1]" classname="com.compiler.RegexTest" time="0.001"/>
  <testcase name="testPrecedenceKleeneOverConcat(String, boolean)[2]" classname="com.compiler.RegexTest" time="0.0"/>
  <testcase name="testPrecedenceKleeneOverConcat(String, boolean)[3]" classname="com.compiler.RegexTest" time="0.0"/>
  <testcase name="testPrecedenceKleeneOverConcat(String, boolean)[4]" classname="com.compiler.RegexTest" time="0.001"/>
  <testcase name="testPrecedenceKleeneOverConcat(String, boolean)[5]" classname="com.compiler.RegexTest" time="0.0"/>
  <testcase name="testPrecedenceKleeneOverConcat(String, boolean)[6]" classname="com.compiler.RegexTest" time="0.0"/>
  <testcase name="testPrecedenceKleeneOverConcat(String, boolean)[7]" classname="com.compiler.RegexTest" time="0.001"/>
  <testcase name="testComplexNesting(String, boolean)[1]" classname="com.compiler.RegexTest" time="0.001"/>
  <testcase name="testComplexNesting(String, boolean)[2]" classname="com.compiler.RegexTest" time="0.001"/>
  <testcase name="testComplexNesting(String, boolean)[3]" classname="com.compiler.RegexTest" time="0.0"/>
  <testcase name="testComplexNesting(String, boolean)[4]" classname="com.compiler.RegexTest" time="0.001"/>
  <testcase name="testComplexNesting(String, boolean)[5]" classname="com.compiler.RegexTest" time="0.0"/>
  <testcase name="testComplexNesting(String, boolean)[6]" classname="com.compiler.RegexTest" time="0.0"/>
  <testcase name="testComplexNesting(String, boolean)[7]" classname="com.compiler.RegexTest" time="0.001"/>
  <testcase name="testComplexNesting(String, boolean)[8]" classname="com.compiler.RegexTest" time="0.0"/>
  <testcase name="testContainsAtLeastOneA(String, boolean)[1]" classname="com.compiler.RegexTest" time="0.0"/>
  <testcase name="testContainsAtLeastOneA(String, boolean)[2]" classname="com.compiler.RegexTest" time="0.0"/>
  <testcase name="testContainsAtLeastOneA(String, boolean)[3]" classname="com.compiler.RegexTest" time="0.001"/>
  <testcase name="testContainsAtLeastOneA(String, boolean)[4]" classname="com.compiler.RegexTest" time="0.0"/>
  <testcase name="testContainsAtLeastOneA(String, boolean)[5]" classname="com.compiler.RegexTest" time="0.0"/>
  <testcase name="testContainsAtLeastOneA(String, boolean)[6]" classname="com.compiler.RegexTest" time="0.001"/>
  <testcase name="testContainsAtLeastOneA(String, boolean)[7]" classname="com.compiler.RegexTest" time="0.0"/>
  <testcase name="testContainsAtLeastOneA(String, boolean)[8]" classname="com.compiler.RegexTest" time="0.0"/>
  <testcase name="testContainsAtLeastOneA(String, boolean)[9]" classname="com.compiler.RegexTest" time="0.0"/>
  <testcase name="testContainsAtLeastOneA(String, boolean)[10]" classname="com.compiler.RegexTest" time="0.0"/>
  <testcase name="testGroupingKleene(String, boolean)[1]" classname="com.compiler.RegexTest" time="0.0"/>
  <testcase name="testGroupingKleene(String, boolean)[2]" classname="com.compiler.RegexTest" time="0.001"/>
  <testcase name="testGroupingKleene(String, boolean)[3]" classname="com.compiler.RegexTest" time="0.0"/>
  <testcase name="testGroupingKleene(String, boolean)[4]" classname="com.compiler.RegexTest" time="0.001"/>
  <testcase name="testGroupingKleene(String, boolean)[5]" classname="com.compiler.RegexTest" time="0.0"/>
  <testcase name="testGroupingKleene(String, boolean)[6]" classname="com.compiler.RegexTest" time="0.001"/>
  <testcase name="testGroupingKleene(String, boolean)[7]" classname="com.compiler.RegexTest" time="0.0"/>
  <testcase name="testGroupingKleene(String, boolean)[8]" classname="com.compiler.RegexTest" time="0.0"/>
  <testcase name="testGroupingKleene(String, boolean)[9]" classname="com.compiler.RegexTest" time="0.0"/>
  <testcase name="testGroupingKleene(String, boolean)[10]" classname="com.compiler.RegexTest" time="0.0"/>
  <testcase name="testGroupingKleene(String, boolean)[11]" classname="com.compiler.RegexTest" time="0.0"/>
  <testcase name="testUnionOperator(String, boolean)[1]" classname="com.compiler.RegexTest" time="0.0"/>
  <testcase name="testUnionOperator(String, boolean)[2]" classname="com.compiler.RegexTest" time="0.0"/>
  <testcase name="testUnionOperator(String, boolean)[3]" classname="com.compiler.RegexTest" time="0.0"/>
  <testcase name="testUnionOperator(String, boolean)[4]" classname="com.compiler.RegexTest" time="0.0"/>
  <testcase name="testUnionOperator(String, boolean)[5]" classname="com.compiler.RegexTest" time="0.0"/>
  <testcase name="testOptionalOperator(String, boolean)[1]" classname="com.compiler.RegexTest" time="0.0"/>
  <testcase name="testOptionalOperator(String, boolean)[2]" classname="com.compiler.RegexTest" time="0.0"/>
  <testcase name="testOptionalOperator(String, boolean)[3]" classname="com.compiler.RegexTest" time="0.0"/>
  <testcase name="testOptionalOperator(String, boolean)[4]" classname="com.compiler.RegexTest" time="0.0"/>
  <testcase name="testNestedKleene(String, boolean)[1]" classname="com.compiler.RegexTest" time="0.001"/>
  <testcase name="testNestedKleene(String, boolean)[2]" classname="com.compiler.RegexTest" time="0.0"/>
  <testcase name="testNestedKleene(String, boolean)[3]" classname="com.compiler.RegexTest" time="0.0"/>
  <testcase name="testNestedKleene(String, boolean)[4]" classname="com.compiler.RegexTest" time="0.0"/>
  <testcase name="testOptionalInsideConcat(String, boolean)[1]" classname="com.compiler.RegexTest" time="0.0"/>
  <testcase name="testOptionalInsideConcat(String, boolean)[2]" classname="com.compiler.RegexTest" time="0.001"/>
  <testcase name="testOptionalInsideConcat(String, boolean)[3]" classname="com.compiler.RegexTest" time="0.0"/>
  <testcase name="testOptionalInsideConcat(String, boolean)[4]" classname="com.compiler.RegexTest" time="0.0"/>
  <testcase name="testOptionalInsideConcat(String, boolean)[5]" classname="com.compiler.RegexTest" time="0.001"/>
  <testcase name="testOptionalInsideConcat(String, boolean)[6]" classname="com.compiler.RegexTest" time="0.0"/>
</testsuite>